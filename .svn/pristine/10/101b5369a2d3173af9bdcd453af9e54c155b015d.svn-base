/**
* 用户操作文件
*/
var UserCmd = function() {
    this.userService = null;
    this.redisService = null;
};

/**  
* @description 是否是管理员
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.isAdmin = function(req,res,callback){
    var username = req.session.user.username;
    this.userService.isAdmin(username,function(error,result){
        if(callback&&(typeof callback == 'function')){
            return callback(error,result);
        }
        return res.json(error,result);
    })
}
/**  
* @description 登录
* @param req
* @param res
*/ 
UserCmd.prototype.login = function(req,res){
    var _this = this;
    var obj = {
        "username": req.body.username,
        "password": req.body.password
    }
    this.userService.getUser(obj,function(error,result){
        var redirect = req.session.redirect;//单点登录
        if(result&&result.length>0){
             req.session.user = result[0];
            _this.redisService.load(obj.username);//加载 缓存
            
            req.headers.cookie && req.headers.cookie.split(';').forEach(function( Cookie ) {
                var parts = Cookie.split('=');
                if(parts[0].replace(new RegExp(" ","g"),"") == "ticket"){
                    console.log("ticket is exist...");
                }
            });
            if(redirect){
                req.session.redirect = null;
                var ticket = obj.username;//动态生成 并需加密等处理 TODO
                res.cookie("ticket", ticket, {maxAge:3600*24*1000, path:'/'});
                return res.redirect(redirect);
            }
            return res.redirect("/"); 
        }else{
            return res.redirect("/login");
        }
    })
};
/**  
* @description 注册
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.reg = function(req,res){
    var obj = {
        "username":req.body.username,
        "password":req.body.password,
        "email":req.body.email
    }
    this.userService.add(obj,function(error,result){
        if(error){
            return res.json(error);
        }else{
             req.session.user = result;
            return res.redirect("/");
        }
    })
};
/**  
* @description 新增
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.add = function(req,res){
    var obj = JSON.parse(req.body.params);
    this.userService.add(obj,function(error,result){
        return res.json(error,result);
    })
};
/**  
* @description 分页显示
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.pagination = function(req,res){

    var sEcho = req.param("sEcho");
    var iDisplayStart = req.param("iDisplayStart");
    var iDisplayLength = req.param("iDisplayLength");
    var iSortCol_0 = req.param("iSortCol_0");
    var mSortDataProp = req.param("mDataProp_"+iSortCol_0);
    var sortType = req.param("sSortDir_0");
    var sortFlag = "-";
    if(sortType == "asc"){
        sortFlag = "-";
    }else if(sortType == "desc"){
        sortFlag = "";
    }
    var params = req.param("params");
    var query={};
    if(params){
        var jsonObj = JSON.parse(params);
        for(var attr in jsonObj){
            query[attr]=new RegExp(jsonObj[attr]);//模糊查询参数
        }
    }
    var obj = {
        "iDisplayStart":iDisplayStart,
        "iDisplayLength":iDisplayLength,
        "sort":sortFlag+mSortDataProp,
        "sEcho":sEcho
    };

    this.userService.pagination(obj,query,function(error,result){
        return res.json(error,result);
    })
};
/**  
* @description 获取用户
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.getUser = function(req,res){
    var obj = {
        "username":req.param("username")
    }
    this.userService.getUser(obj,function(error,result){
        return res.json(error,result);
    })
}
/**  
* @description 更新
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.update = function(req,res){
    var obj = JSON.parse(req.body.params);
    this.userService.update(obj,function(error,result){
        return res.json(error,result);
    })
}
/**  
* @description 删除
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.delete = function(req,res){
    var obj = JSON.parse(req.body.params);
    this.userService.delete(obj,function(error,result){
        return res.json(error,result);
    })
}
/**  
* @description 新增资源
* @param req
* @param res
* @return json
*/ 
UserCmd.prototype.addResource = function(req,res){
    var obj = JSON.parse(req.body.params);
    var query = {
        "username":obj.username
    }
    var resource = obj.resource;
    this.userService.addResource(query,resource,function(error,result){
        return res.json(error,result);
    })
}
module.exports = UserCmd;